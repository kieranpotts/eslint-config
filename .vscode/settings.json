{

  /* === BUILT-IN SETTINGS === */

  /* Disable all types of auto-fixes. This setting effectively disables both
  EditorConfig and ESLint when saving files in this repository. This is
  REQUIRED so that we can leave invalid code formatting in the text fixtures.
  https://code.visualstudio.com/Docs/languages/javascript#_code-actions-on-save */

  "editor.codeActionsOnSave": {
    "source.fixAll": "never"
  },

  /* Render vertical guidelines at 80, 100 120 columns. Code lines SHOULD be
  less than 80 characters long and MUST be less than 100 characters. Comment
  lines MAY be a little longer, up to 120 characters. */

  "editor.rulers": [
    80,
    100,
    120
  ],

  /* DO NOT have VS Code automatically detect indentation, but force
	tabs to always be transformed to two spaces. */

  "editor.detectIndentation": false,
  "editor.insertSpaces": true,
  "editor.tabSize": 2,

  /* Overrides for JavaScript files:
  Use the ESLint extension as the default JavaScript formatter, but disable all
  automatic formatting. This also has the effect of disabling Prettier, if that
  extension is installed in VS Code. */

  "[javascript]": {
    "editor.defaultFormatter": "dbaeumer.vscode-eslint",
    "editor.formatOnPaste": false,
    "editor.formatOnSave": false,
    "editor.formatOnType": false,
  },

  /* Overrides for TypeScript files â€“ same as for JavaScript. */

  "[typescript]": {
    "editor.defaultFormatter": "dbaeumer.vscode-eslint",
    "editor.formatOnPaste": false,
    "editor.formatOnSave": false,
    "editor.formatOnType": false,
  },

  /* === EXTENSION SETTINGS === */

  /*
  Settings for the ESLint extension.
  https://marketplace.visualstudio.com/items?itemName=dbaeumer.vscode-eslint

  - Enable support for the new flat-file configuration format,
    `eslint.config.js`, available since ESLint v8.21.
  - Enable ESLint as a code formatter.
  - Enable ESLint for validation of JS and TS source files.
  */

  "eslint.experimental.useFlatConfig": true,
  "eslint.format.enable": true,
  "eslint.validate": ["javascript", "typescript"],

  /*
  Settings for the Jest extension.
  https://marketplace.visualstudio.com/items?itemName=Orta.vscode-jest

  This is the command used to kick off tests in the terminal. The vscode-jest
  extension will pass additional options to this command at runtime, so we
  must append "--" to the "npm run" command to ensure the injected options
  get forwarded tothe "jest" command.

  https://github.com/jest-community/vscode-jest#jestcommandline
  */

  "jest.jestCommandLine": "npm run test -- ",

}
